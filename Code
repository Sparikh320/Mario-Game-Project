# Anthony Esquivel afe2xd, Sahil Parikh sp4qf
import pygame
import gamebox

camera = gamebox.Camera(800, 600)
game_on = False
goomba_dead = False
koopa_down = False
koopa_dead = False
health = 10
koopa_x = 1300
goomba_velocity = 5
koopa_velocity = 6

borders = [gamebox.from_color(400, 20, "black", 8000, 40),
           gamebox.from_color(400, 875, "green", 800, 650),
           gamebox.from_color(1300, 875, "green", 800, 650),
           gamebox.from_color(500, 450, "brown", 50, 50),
           gamebox.from_color(650, 350, "brown", 50, 50),
           gamebox.from_color(900, 250, "brown", 100, 50),
           gamebox.from_color(1100, 150, "brown", 50, 50),
           gamebox.from_color(1200, 450, "brown", 150, 50),
           gamebox.from_color(1400, 350, "brown", 100, 50)]

goomba = gamebox.from_color(300, 530, "brown", 25, 35)
koopa_standing = gamebox.from_color(koopa_x, 530, "green", 25, 40)
koopa_spinning = gamebox.from_color(koopa_x, 1000, "green", 25, 20)
traps = [gamebox.from_color(650, 530, "grey", 50, 40)]

mario = gamebox.from_color(100, 530, "red", 32, 40)
mario.speedx = 0
position = 400
past_save = False

count = 8
def border_func(death = False):
    global position
    global borders
    global count
    all_borders = [  # gamebox.from_color(400, 20, "black", 8000, 40),
        gamebox.from_color(400, 875, "green", 800, 650),
        gamebox.from_color(500, 450, "brown", 50, 50),
        gamebox.from_color(650, 350, "brown", 50, 50),
        gamebox.from_color(1300, 875, "green", 800, 650),
        gamebox.from_color(850, 300, "brown", 150, 50),  #
        gamebox.from_color(1000, 200, "brown", 50, 50),  #
        gamebox.from_color(1200, 200, "brown", 50, 50),  #
        gamebox.from_color(1200, 450, "brown", 150, 50),
        gamebox.from_color(1400, 350, "brown", 100, 50),
        gamebox.from_color(2200, 575, "green", 800, 50),
        gamebox.from_color(1600, 450, "brown", 150, 50)
    ]
    if death:
        borders = all_borders[0:9]
        death = False
        count = 8
    for border in borders:
        if border.x < position - 400 and count != 0 and border != all_borders[0]:
            count += 1
            borders.remove(border)
            try:
                borders.append(all_borders[count])
            except:
                count = 0
                break
    #if position > 800:
    #    for i in range(len(borders)-2):
    #        borders.remove(borders[i])
    #    for i in range(3,7):
    #        borders.append(all_borders[i])


def dead():
    global health
    global past_save
    global position
    global goomba_dead
    global koopa_dead
    global koopa_down
    global koopa_x
    global koopa_y
    global goomba_velocity
    global koopa_velocity
    border_func(True)
    health -= 1
    if health < 1:
        camera.center = [400, 300]
        camera.draw(gamebox.from_text(400, 200, "Game over", 40, "Red"))
        gamebox.pause()
    elif past_save:
        camera.center = [4000, 300]
    else:
        camera.center = [400, 300]
        mario.x = 100
        mario.y = 530
        mario.xspeed = 0
        mario.yspeed = 0
    position = 400
    goomba_dead = False
    koopa_dead = False
    koopa_down = False
    goomba.x = 300
    goomba.y = 530
    koopa_standing.x = 1300
    koopa_standing.y = 530
    koopa_spinning.y = 1000
    goomba_velocity = 5
    koopa_velocity = 7



def tick(keys):
    global game_on
    global position
    global goomba_dead
    global koopa_down
    global koopa_dead
    global health
    global koopa_x
    global koopa_y
    global past_save
    global goomba_velocity
    global koopa_velocity
    camera.clear("lightblue")
    if not game_on:
        camera.draw(gamebox.from_text(400, 100, "Mario", 50, "Red"))
        camera.draw(gamebox.from_text(400, 140, "By Anthony Esquivel(afe2xd) and Sahil Parikh(sp4qf)", 40, "Black"))
        camera.draw(gamebox.from_text(400, 200, "Use arrow keys to move and jump", 40, "Black"))
        camera.draw(gamebox.from_text(400, 240, "Avoid enemies and traps and make it to the end", 40, "Black"))
        camera.draw(gamebox.from_text(400, 350, "Press space to start", 40, "Red"))
    if pygame.K_SPACE in keys:
        game_on = True

    border_func()

    # player movement
    if game_on:
        if pygame.K_UP in keys:
            for border in borders:  # Mario can only jump up if he is not in the air already
                if mario.bottom_touches(border):
                    mario.speedy = -40
        if pygame.K_RIGHT in keys:
            mario.x += 10
        if pygame.K_LEFT in keys:
            mario.x += -10
        mario.move_speed()

        goomba.xspeed = goomba_velocity
        if goomba.x >= 375:
            goomba.x -= 10
            goomba_velocity *= -1
        if goomba.x <= 225:
            goomba.x += 10
            goomba_velocity *= -1
        goomba.move_speed()

        koopa_standing.xspeed = koopa_velocity
        koopa_x = koopa_standing.x
        if koopa_standing.x > 1550:
            koopa_standing.x -= 20
            koopa_velocity *= -1
        if koopa_standing.x < 1200:
            koopa_standing.x += 20
            koopa_velocity *= -1
        koopa_standing.move_speed()

        koopa_spinning.xspeed = koopa_velocity
        if koopa_spinning.x > 1550:
            koopa_spinning.x -= 25
            koopa_velocity *= -1
        if koopa_spinning.x < 1200:
            koopa_spinning.x += 25
            koopa_velocity *= -1
        koopa_spinning.move_speed()

    # Save Point
    if mario.x > 12000:  # Arbitrary x value needs to be changed
        past_save = True
    # Insert counter here to stop from iterating every tick?

    # Screen Movement
    if mario.x > position:
        camera.center = [mario.x, 300]
        position = mario.x
    if mario.x < position - 400:
        mario.x = position - 400

    # Mario interacts with enemies and dies
    #BUG: the enemies do not re appear after mario revives and they still kill mario after they are dead
    if mario.y > 800:
        dead()
    if (goomba.top_touches(mario) or mario.bottom_touches(goomba)) and not goomba_dead: #while the last two pieces of these statements seem unecessary, they help safeguard against glitches
        mario.y -= 20
        mario.move_to_stop_overlapping(goomba)
        mario.speedy = -40
        goomba.y = 1000
        goomba_dead = True
    elif mario.left_touches(goomba) or mario.right_touches(goomba):
        dead()
    if (koopa_standing.top_touches(mario) or mario.bottom_touches(koopa_standing)) and not koopa_down:
        mario.y -= 20
        mario.move_to_stop_overlapping(koopa_standing)
        mario.speedy = -40
        koopa_standing.y = 1000
        koopa_down = True
        koopa_velocity *= 1.2
        koopa_spinning.x = koopa_x
        koopa_spinning.y = 535
    elif mario.left_touches(koopa_standing) or mario.right_touches(koopa_standing):
        dead()
    if (koopa_spinning.top_touches(mario) or mario.bottom_touches(koopa_spinning)) and not koopa_dead:
        mario.y -= 20
        mario.move_to_stop_overlapping(koopa_spinning)
        mario.speedy = -40
        koopa_spinning.y = 1000
        koopa_dead = True
    elif mario.left_touches(koopa_spinning) or mario.right_touches(koopa_spinning):
        dead()
    for trap in traps:
        if mario.left_touches(trap) or mario.right_touches(trap):
            dead()

    # this is how Mario interacts with the borders
    for border in borders:
        if mario.top_touches(border):
            mario.speedy = 0.65
            mario.move_to_stop_overlapping(border)
        if mario.left_touches(border) or mario.right_touches(border):
            if mario.speedy < 0:
                mario.speedx *= -0.1
                mario.move_to_stop_overlapping(border)
                mario.speedy += 1.3
                keys.clear()
        elif not mario.bottom_touches(border):
            mario.speedy += 0.65  # whenever mario is in the air he gains downward velocity
        else:
            mario.speedy = 0
            mario.move_to_stop_overlapping(border)

    # drawing all the objects
    camera.draw(mario)
    for border in borders:
        camera.draw(border)
    for trap in traps:
        camera.draw(trap)
    if not goomba_dead:
        camera.draw(goomba)
    if not koopa_dead:
        if not koopa_down:
            camera.draw(koopa_standing)
        else:
            camera.draw(koopa_spinning)
    camera.display()

gamebox.timer_loop(35, tick)
